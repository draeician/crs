[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "crs_thoughts"
version = "0.1.0"
description = "CLI tools for recording questions, answers, and thoughts"
requires-python = ">=3.8"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
    "python-dateutil>=2.8.2",
    "typing-extensions>=4.5.0",
    "pyyaml>=6.0.1",
    "structlog>=24.1.0",
    "litellm>=1.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "pydantic>=2.5.0",
    "aiohttp>=3.9.0",
    "backoff>=2.2.1",
    "nltk>=3.8.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
    "pytest-timeout>=2.1.0",
    "ruff>=0.1.9",
    "black>=23.12.0",
    "mypy>=1.8.0",
    "build>=1.0.3",
    "pre-commit>=3.5.0",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "types-python-dateutil>=2.8.2",
    "types-pyyaml>=6.0.1",
]

[project.scripts]
question = "crs_thoughts.cli:question_main"
answer = "crs_thoughts.cli:answer_main"
thought = "crs_thoughts.cli:thought_main"
crs-config = "crs_thoughts.cli:config_main"
suggest-answer = "crs_thoughts.ai.suggestions:suggest_answer_main"
suggest-questions = "crs_thoughts.ai.suggestions:suggest_questions_main"
enrich-thought = "crs_thoughts.ai.enrichment:enrich_thought_main"
web-search = "crs_thoughts.search.searxng:web_search_main"
crsbackup = "crs_thoughts.cli:backup_main"
crstest = "crs_thoughts.scripts.run_tests:main"
verify-ollama = "crs_thoughts.scripts.verify_ollama:main"
test-ollama = "crs_thoughts.scripts.test_ollama_prompt:main"

[tool.hatch.build.targets.wheel]
packages = ["src/crs_thoughts"]
include = ["src/crs_thoughts/**/*.py"]

[tool.ruff]
line-length = 100
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "S",   # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "C4",  # flake8-comprehensions
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
]
ignore = ["D107", "D203", "D213"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "D100", "D101", "D102", "D103"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = """
    --cov=crs_thoughts
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80
    -v
    --strict-markers
    --strict-config
"""
markers = [
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
    "security: marks tests that verify security features",
]

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
plugins = ["pydantic.mypy"]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/tests/data/
'''

[tool.coverage.run]
source = ["crs_thoughts"]
branch = true
parallel = true
concurrency = ["thread", "multiprocessing"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80
show_missing = true

[tool.coverage.html]
directory = "coverage_html"

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["crs_thoughts"]

[tool.hatch.build]
include = [
    "src/crs_thoughts/**/*.py",
    "src/crs_thoughts/**/*.pyi",
]